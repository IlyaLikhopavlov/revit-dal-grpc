// <auto-generated />
using System;
using App.Catalog.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Catalog.Db.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20230308064938_ChannelsAdded")]
    partial class ChannelsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("App.Catalog.Db.Model.BarCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarFeature")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdGuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartNumber")
                        .HasColumnType("TEXT");

                    b.Property<long>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BarCatalog");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.BarCatalogChannel", b =>
                {
                    b.Property<int>("BarCatalogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BarCatalogId", "ChannelId");

                    b.HasIndex("ChannelId");

                    b.ToTable("BarCatalogChannel");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Channel");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.FooCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("FooFeature")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdGuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartNumber")
                        .HasColumnType("TEXT");

                    b.Property<long>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FooCatalog");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.FooCatalogChannel", b =>
                {
                    b.Property<int>("FooCatalogId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FooCatalogId", "ChannelId");

                    b.HasIndex("ChannelId");

                    b.ToTable("FooCatalogChannel");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.BarCatalogChannel", b =>
                {
                    b.HasOne("App.Catalog.Db.Model.BarCatalog", "BarCatalog")
                        .WithMany("BarCatalogChannels")
                        .HasForeignKey("BarCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Catalog.Db.Model.Channel", "Channel")
                        .WithMany("BarCatalogChannels")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarCatalog");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.FooCatalogChannel", b =>
                {
                    b.HasOne("App.Catalog.Db.Model.Channel", "Channel")
                        .WithMany("FooCatalogChannels")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Catalog.Db.Model.FooCatalog", "FooCatalog")
                        .WithMany("FooCatalogChannels")
                        .HasForeignKey("FooCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");

                    b.Navigation("FooCatalog");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.BarCatalog", b =>
                {
                    b.Navigation("BarCatalogChannels");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.Channel", b =>
                {
                    b.Navigation("BarCatalogChannels");

                    b.Navigation("FooCatalogChannels");
                });

            modelBuilder.Entity("App.Catalog.Db.Model.FooCatalog", b =>
                {
                    b.Navigation("FooCatalogChannels");
                });
#pragma warning restore 612, 618
        }
    }
}
